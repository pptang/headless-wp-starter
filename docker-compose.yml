version: '3'

services:
    db-headless:
        container_name: db-headless
        environment:
            - MYSQL_RANDOM_ROOT_PASSWORD=yes
            - MYSQL_DATABASE=${WORDPRESS_DB_NAME}
            - MYSQL_PASSWORD=${WORDPRESS_DB_PASSWORD}
            - MYSQL_USER=${WORDPRESS_DB_USER}
        image: mariadb
        ports:
            - '3307:3306'
        volumes:
            - ./db_data:/var/lib/mysql
    wp-headless:
        build: .
        command: bash -c 'install_wordpress && apache2-foreground'
        container_name: wp-headless
        depends_on:
            - db-headless
        env_file: ./.env
        ports:
            - '8080:8080'
        user: www-data
        volumes:
            - ./wordpress:/var/www/html
            - ./docker/install_wordpress.sh:/usr/local/bin/install_wordpress
            - ./docker/migratedb_import.sh:/usr/local/bin/migratedb_import
            - ./docker/postlightheadlesswpstarter.wordpress.xml:/var/www/postlightheadlesswpstarter.wordpress.xml
            - ./docker/plugins:/var/www/plugins
    nginx:
        # This is to make sure that nginx reloads the newly obtained certificates
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        image: nginx:1.17.1-alpine
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./landing/build:/var/www
            # These are share volumes with cerbot,
            # This is for the actual certificate.
            - ./certbot/conf:/etc/letsencrypt
            # This is for validation challenges.
            - ./certbot/www:/var/www/certbot
        ports:
            - '80:80'
            - '443:443'
        depends_on:
            - wp-headless
    certbot:
        image: certbot/certbot
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        # This will check if the certificate is up for renewal every 12 hours
        # https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    frontend:
        command: sh -c 'yarn && yarn build && yarn start:prod'
        container_name: frontend
        expose:
            - '3000'
        image: node:10.16.0
        env_file: ./.env
        ports:
            - '3000:3000'
        user: node
        volumes:
            - ./frontend:/home/node/app
        working_dir: /home/node/app
