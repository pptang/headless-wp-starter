# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

# Reuse this executor (docker image) between jobs
# https://circleci.com/docs/2.0/reusing-config/#authoring-reusable-executors
executors:
  landing-page-executor:
    docker:
      - image: circleci/node:10.16
    working_directory: ~/repo/landing

  frontend-executor:
    docker:
      - image: circleci/node:10.16
    working_directory: ~/repo/frontend

jobs:
  build-landing:
    executor: landing-page-executor
    steps:
      - checkout:
          path: ~/repo

      - run:
          name: Install create-elm-app
          # Set unsafe-perm to true to suppress the UID/GID switching when running package scripts. If set explicitly to false, then installing as a non-root user will fail.
          command: sudo npm install -g create-elm-app@4.0.0 --unsafe-perm=true

      - run: elm-app build

      # Persist build folder to the worksapce for deploy job
      - persist_to_workspace:
          root: ./
          paths:
            - build

  deploy-landing:
    executor: landing-page-executor
    steps:
      # Get the build result from previous job
      - attach_workspace:
          at: ~/repo/landing

      - add_ssh_keys:
          fingerprints:
            - 'a5:7a:8f:d8:2e:2f:09:40:89:b8:89:ce:58:f4:98:f7'

      - run:
          name: Archive build folder
          command: tar -zcvf landing_page.tar.gz build/

      - run:
          name: Send the archived build folder to ec2 instance
          command: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null landing_page.tar.gz ubuntu@52.198.50.117:/home/ubuntu/app/landing

      - run:
          name: Extract archived build folder on ec2 using ssh
          command: ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@52.198.50.117 "tar -xvzf /home/ubuntu/app/landing/landing_page.tar.gz -C /home/ubuntu/app/landing && cd /home/ubuntu/app/landing && docker-compose restart nginx"

  build-frontend:
    executor: frontend-executor
    steps:
      - checkout:
          path: ~/repo

      - run:
          name: Install dependencies
          command: sudo yarn install

      - run:
          name: Build application
          command: sudo yarn build

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-landing
      - build-frontend
      - deploy-landing:
          requires:
            - build-landing
          filters:
            branches:
              only: master
      # - deploy-frontend:
      #     requires:
      #       - build-frontend
      #     filters:
      #       branches:
      #         only: master
